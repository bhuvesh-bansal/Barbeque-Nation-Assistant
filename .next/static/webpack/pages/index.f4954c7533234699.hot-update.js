"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/lib/stateMachine.ts":
/*!*********************************!*\
  !*** ./src/lib/stateMachine.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StateMachine: function() { return /* binding */ StateMachine; }\n/* harmony export */ });\n/* harmony import */ var _config_stateMachine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/stateMachine */ \"./src/config/stateMachine.ts\");\n\nclass StateMachine {\n    getState() {\n        return this.state;\n    }\n    getCurrentState() {\n        return this.state.currentState;\n    }\n    getCurrentPrompt() {\n        const currentState = _config_stateMachine__WEBPACK_IMPORTED_MODULE_0__.states[this.state.currentState];\n        if (!currentState) {\n            console.error(\"Invalid state: \".concat(this.state.currentState));\n            this.state.currentState = \"START\";\n            return _config_stateMachine__WEBPACK_IMPORTED_MODULE_0__.states.START.prompt;\n        }\n        // Replace placeholders in prompt with actual values\n        let prompt = currentState.prompt;\n        if (this.state.currentState === \"CONFIRM_DETAILS\") {\n            prompt = prompt.replace(\"{phone}\", this.formatPhoneNumber(this.state.phoneNumber || \"\")).replace(\"{name_confirmation}\", this.state.name ? \"your name is \".concat(this.state.name) : \"you preferred not to provide your name\");\n        }\n        return prompt;\n    }\n    formatPhoneNumber(phone) {\n        return phone.replace(/(\\d{4})(\\d{3})(\\d{3})/, \"$1-$2-$3\");\n    }\n    async processInput(input) {\n        // Special handling for initial state\n        if (input === \"START\") {\n            return this.getCurrentPrompt();\n        }\n        const currentState = _config_stateMachine__WEBPACK_IMPORTED_MODULE_0__.states[this.state.currentState];\n        if (!currentState) {\n            console.error(\"Invalid state: \".concat(this.state.currentState));\n            this.state.currentState = \"START\";\n            return _config_stateMachine__WEBPACK_IMPORTED_MODULE_0__.states.START.prompt;\n        }\n        // Validate input if validation function exists\n        if (currentState.validation && !currentState.validation(input)) {\n            return currentState.prompt;\n        }\n        // Determine next state based on input\n        let nextState = \"\";\n        switch(this.state.currentState){\n            case \"START\":\n                const location = input.toLowerCase().trim();\n                nextState = \"VERIFY_LOCATION\";\n                this.state.location = location;\n                break;\n            case \"VERIFY_LOCATION\":\n                var _this_state_location;\n                nextState = this.availableProperties.has(((_this_state_location = this.state.location) === null || _this_state_location === void 0 ? void 0 : _this_state_location.toLowerCase()) || \"\") ? \"COLLECT_NAME\" : \"LOCATION_NOT_FOUND\";\n                break;\n            case \"LOCATION_NOT_FOUND\":\n                nextState = input.toLowerCase() === \"yes\" ? \"START\" : \"END\";\n                break;\n            case \"COLLECT_NAME\":\n                if (input.toLowerCase() === \"no\" || input.toLowerCase() === \"skip\") {\n                    nextState = \"COLLECT_PHONE\";\n                    this.state.name = undefined;\n                } else {\n                    nextState = \"COLLECT_PHONE\";\n                    this.state.name = input;\n                }\n                break;\n            case \"COLLECT_PHONE\":\n                if (/^\\d{10}$/.test(input)) {\n                    this.state.phoneNumber = input;\n                    nextState = \"CONFIRM_DETAILS\";\n                } else {\n                    return \"I apologize, but I need a valid 10-digit phone number. Could you please provide it again?\";\n                }\n                break;\n            case \"CONFIRM_DETAILS\":\n            case \"END\":\n                nextState = input.toLowerCase() === \"yes\" ? \"START\" : \"FINAL\";\n                if (input.toLowerCase() === \"no\" && this.state.currentState === \"CONFIRM_DETAILS\") {\n                    nextState = \"COLLECT_NAME\";\n                }\n                break;\n            default:\n                nextState = currentState.transitions.NEXT || currentState.transitions.BACK;\n        }\n        // Log state transition\n        this.state.history.push({\n            state: this.state.currentState,\n            input,\n            timestamp: Date.now()\n        });\n        // Update current state\n        this.state.currentState = nextState || this.state.currentState;\n        // Execute action if it exists\n        if (_config_stateMachine__WEBPACK_IMPORTED_MODULE_0__.states[this.state.currentState].action) {\n            await _config_stateMachine__WEBPACK_IMPORTED_MODULE_0__.states[this.state.currentState].action(this.state, input);\n        }\n        return this.getCurrentPrompt();\n    }\n    reset() {\n        this.state = {\n            currentState: \"START\",\n            history: [\n                {\n                    state: \"START\",\n                    input: \"\",\n                    timestamp: Date.now()\n                }\n            ]\n        };\n    }\n    constructor(){\n        this.state = {\n            currentState: \"START\",\n            history: []\n        };\n        // This should be populated from your actual property database\n        this.availableProperties = new Set([\n            \"bangalore\",\n            \"delhi\",\n            \"mumbai\",\n            \"pune\"\n        ]);\n        // Initialize with the first message\n        this.state.history.push({\n            state: \"START\",\n            input: \"\",\n            timestamp: Date.now()\n        });\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/stateMachine.ts\n"));

/***/ })

});