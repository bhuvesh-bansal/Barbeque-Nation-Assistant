"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/config/locations.ts":
/*!*********************************!*\
  !*** ./src/config/locations.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   locations: function() { return /* binding */ locations; }\n/* harmony export */ });\nconst locations = {\n    \"bangalore-indiranagar\": {\n        name: \"Barbeque Nation - Indiranagar\",\n        address: \"No.4005, HAL 2nd stage, 100 feet road, Indiranagar, Bangalore-560038\",\n        timings: {\n            \"Monday to Friday\": {\n                lunch: {\n                    opening: \"12:00 pm\",\n                    lastEntry: \"04:00 pm\",\n                    closing: \"05:00 pm\"\n                },\n                dinner: {\n                    opening: \"06:30 pm\",\n                    lastEntry: \"11:00 pm\",\n                    closing: \"11:55 pm\"\n                }\n            },\n            \"Saturday\": {\n                lunch: {\n                    opening: \"12:00 pm\",\n                    lastEntry: \"04:00 pm\",\n                    closing: \"05:00 pm\"\n                },\n                dinner: {\n                    opening: \"06:30 pm\",\n                    lastEntry: \"11:00 pm\",\n                    closing: \"11:55 pm\"\n                }\n            },\n            \"Sunday\": {\n                lunch: {\n                    opening: \"11:00 pm\",\n                    lastEntry: \"04:00 pm\",\n                    closing: \"05:00 pm\"\n                },\n                dinner: {\n                    opening: \"06:30 pm\",\n                    lastEntry: \"11:00 pm\",\n                    closing: \"11:55 pm\"\n                }\n            }\n        },\n        amenities: {\n            bar: true,\n            valetParking: true,\n            babyChair: true,\n            lift: true\n        },\n        offers: {\n            complimentaryDrinks: \"Lunch / Monday to Saturday / 1 Round / Soft drink or Mocktail\",\n            foodFestival: false,\n            earlyBird: false,\n            buffetOffer: false,\n            armyOffer: false,\n            drinksOffer: false\n        },\n        nearestOutlets: [\n            {\n                name: \"Lido Mall Mg Road\",\n                address: \"1/4, Ground Floor, Lido Mall, Swami Vivekananda Road, Halasuru, Bengaluru, Karnataka 560008, India\",\n                distance: \"4.1 km\"\n            },\n            {\n                name: \"Koramangala 7th block\",\n                address: \"118, 1st Floor ,80 Feet Rd, KHB Colony, 7th Block, Koramangala, Bengaluru\",\n                distance: \"5.8 km\"\n            }\n        ],\n        slots: {\n            \"Monday to Sunday\": {\n                pax: {\n                    \"2+1\": \"Flexible\",\n                    \"3 & Above\": \"Flexible\"\n                }\n            }\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29uZmlnL2xvY2F0aW9ucy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBOENPLE1BQU1BLFlBQWdEO0lBQzNELHlCQUF5QjtRQUN2QkMsTUFBTTtRQUNOQyxTQUFTO1FBQ1RDLFNBQVM7WUFDUCxvQkFBb0I7Z0JBQ2xCQyxPQUFPO29CQUNMQyxTQUFTO29CQUNUQyxXQUFXO29CQUNYQyxTQUFTO2dCQUNYO2dCQUNBQyxRQUFRO29CQUNOSCxTQUFTO29CQUNUQyxXQUFXO29CQUNYQyxTQUFTO2dCQUNYO1lBQ0Y7WUFDQSxZQUFZO2dCQUNWSCxPQUFPO29CQUNMQyxTQUFTO29CQUNUQyxXQUFXO29CQUNYQyxTQUFTO2dCQUNYO2dCQUNBQyxRQUFRO29CQUNOSCxTQUFTO29CQUNUQyxXQUFXO29CQUNYQyxTQUFTO2dCQUNYO1lBQ0Y7WUFDQSxVQUFVO2dCQUNSSCxPQUFPO29CQUNMQyxTQUFTO29CQUNUQyxXQUFXO29CQUNYQyxTQUFTO2dCQUNYO2dCQUNBQyxRQUFRO29CQUNOSCxTQUFTO29CQUNUQyxXQUFXO29CQUNYQyxTQUFTO2dCQUNYO1lBQ0Y7UUFDRjtRQUNBRSxXQUFXO1lBQ1RDLEtBQUs7WUFDTEMsY0FBYztZQUNkQyxXQUFXO1lBQ1hDLE1BQU07UUFDUjtRQUNBQyxRQUFRO1lBQ05DLHFCQUFxQjtZQUNyQkMsY0FBYztZQUNkQyxXQUFXO1lBQ1hDLGFBQWE7WUFDYkMsV0FBVztZQUNYQyxhQUFhO1FBQ2Y7UUFDQUMsZ0JBQWdCO1lBQ2Q7Z0JBQ0VwQixNQUFNO2dCQUNOQyxTQUFTO2dCQUNUb0IsVUFBVTtZQUNaO1lBQ0E7Z0JBQ0VyQixNQUFNO2dCQUNOQyxTQUFTO2dCQUNUb0IsVUFBVTtZQUNaO1NBQ0Q7UUFDREMsT0FBTztZQUNMLG9CQUFvQjtnQkFDbEJDLEtBQUs7b0JBQ0gsT0FBTztvQkFDUCxhQUFhO2dCQUNmO1lBQ0Y7UUFDRjtJQUNGO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29uZmlnL2xvY2F0aW9ucy50cz8zYzU3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgTG9jYXRpb25EZXRhaWxzIHtcbiAgbmFtZTogc3RyaW5nO1xuICBhZGRyZXNzOiBzdHJpbmc7XG4gIHRpbWluZ3M6IHtcbiAgICBba2V5OiBzdHJpbmddOiB7XG4gICAgICBsdW5jaDoge1xuICAgICAgICBvcGVuaW5nOiBzdHJpbmc7XG4gICAgICAgIGxhc3RFbnRyeTogc3RyaW5nO1xuICAgICAgICBjbG9zaW5nOiBzdHJpbmc7XG4gICAgICB9O1xuICAgICAgZGlubmVyOiB7XG4gICAgICAgIG9wZW5pbmc6IHN0cmluZztcbiAgICAgICAgbGFzdEVudHJ5OiBzdHJpbmc7XG4gICAgICAgIGNsb3Npbmc6IHN0cmluZztcbiAgICAgIH07XG4gICAgfTtcbiAgfTtcbiAgYW1lbml0aWVzOiB7XG4gICAgYmFyOiBib29sZWFuO1xuICAgIHZhbGV0UGFya2luZzogYm9vbGVhbjtcbiAgICBiYWJ5Q2hhaXI6IGJvb2xlYW47XG4gICAgbGlmdDogYm9vbGVhbjtcbiAgfTtcbiAgb2ZmZXJzOiB7XG4gICAgY29tcGxpbWVudGFyeURyaW5rczogc3RyaW5nO1xuICAgIGZvb2RGZXN0aXZhbDogYm9vbGVhbjtcbiAgICBlYXJseUJpcmQ6IGJvb2xlYW47XG4gICAgYnVmZmV0T2ZmZXI6IGJvb2xlYW47XG4gICAgYXJteU9mZmVyOiBib29sZWFuO1xuICAgIGRyaW5rc09mZmVyOiBib29sZWFuO1xuICB9O1xuICBuZWFyZXN0T3V0bGV0czogQXJyYXk8e1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBhZGRyZXNzOiBzdHJpbmc7XG4gICAgZGlzdGFuY2U6IHN0cmluZztcbiAgfT47XG4gIHNsb3RzOiB7XG4gICAgW2tleTogc3RyaW5nXToge1xuICAgICAgcGF4OiB7XG4gICAgICAgIFwiMisxXCI6IHN0cmluZztcbiAgICAgICAgXCIzICYgQWJvdmVcIjogc3RyaW5nO1xuICAgICAgfTtcbiAgICB9O1xuICB9O1xufVxuXG5leHBvcnQgY29uc3QgbG9jYXRpb25zOiB7IFtrZXk6IHN0cmluZ106IExvY2F0aW9uRGV0YWlscyB9ID0ge1xuICBcImJhbmdhbG9yZS1pbmRpcmFuYWdhclwiOiB7XG4gICAgbmFtZTogXCJCYXJiZXF1ZSBOYXRpb24gLSBJbmRpcmFuYWdhclwiLFxuICAgIGFkZHJlc3M6IFwiTm8uNDAwNSwgSEFMIDJuZCBzdGFnZSwgMTAwIGZlZXQgcm9hZCwgSW5kaXJhbmFnYXIsIEJhbmdhbG9yZS01NjAwMzhcIixcbiAgICB0aW1pbmdzOiB7XG4gICAgICBcIk1vbmRheSB0byBGcmlkYXlcIjoge1xuICAgICAgICBsdW5jaDoge1xuICAgICAgICAgIG9wZW5pbmc6IFwiMTI6MDAgcG1cIixcbiAgICAgICAgICBsYXN0RW50cnk6IFwiMDQ6MDAgcG1cIixcbiAgICAgICAgICBjbG9zaW5nOiBcIjA1OjAwIHBtXCJcbiAgICAgICAgfSxcbiAgICAgICAgZGlubmVyOiB7XG4gICAgICAgICAgb3BlbmluZzogXCIwNjozMCBwbVwiLFxuICAgICAgICAgIGxhc3RFbnRyeTogXCIxMTowMCBwbVwiLFxuICAgICAgICAgIGNsb3Npbmc6IFwiMTE6NTUgcG1cIlxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgXCJTYXR1cmRheVwiOiB7XG4gICAgICAgIGx1bmNoOiB7XG4gICAgICAgICAgb3BlbmluZzogXCIxMjowMCBwbVwiLFxuICAgICAgICAgIGxhc3RFbnRyeTogXCIwNDowMCBwbVwiLFxuICAgICAgICAgIGNsb3Npbmc6IFwiMDU6MDAgcG1cIlxuICAgICAgICB9LFxuICAgICAgICBkaW5uZXI6IHtcbiAgICAgICAgICBvcGVuaW5nOiBcIjA2OjMwIHBtXCIsXG4gICAgICAgICAgbGFzdEVudHJ5OiBcIjExOjAwIHBtXCIsXG4gICAgICAgICAgY2xvc2luZzogXCIxMTo1NSBwbVwiXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBcIlN1bmRheVwiOiB7XG4gICAgICAgIGx1bmNoOiB7XG4gICAgICAgICAgb3BlbmluZzogXCIxMTowMCBwbVwiLFxuICAgICAgICAgIGxhc3RFbnRyeTogXCIwNDowMCBwbVwiLFxuICAgICAgICAgIGNsb3Npbmc6IFwiMDU6MDAgcG1cIlxuICAgICAgICB9LFxuICAgICAgICBkaW5uZXI6IHtcbiAgICAgICAgICBvcGVuaW5nOiBcIjA2OjMwIHBtXCIsXG4gICAgICAgICAgbGFzdEVudHJ5OiBcIjExOjAwIHBtXCIsXG4gICAgICAgICAgY2xvc2luZzogXCIxMTo1NSBwbVwiXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGFtZW5pdGllczoge1xuICAgICAgYmFyOiB0cnVlLFxuICAgICAgdmFsZXRQYXJraW5nOiB0cnVlLFxuICAgICAgYmFieUNoYWlyOiB0cnVlLFxuICAgICAgbGlmdDogdHJ1ZVxuICAgIH0sXG4gICAgb2ZmZXJzOiB7XG4gICAgICBjb21wbGltZW50YXJ5RHJpbmtzOiBcIkx1bmNoIC8gTW9uZGF5IHRvIFNhdHVyZGF5IC8gMSBSb3VuZCAvIFNvZnQgZHJpbmsgb3IgTW9ja3RhaWxcIixcbiAgICAgIGZvb2RGZXN0aXZhbDogZmFsc2UsXG4gICAgICBlYXJseUJpcmQ6IGZhbHNlLFxuICAgICAgYnVmZmV0T2ZmZXI6IGZhbHNlLFxuICAgICAgYXJteU9mZmVyOiBmYWxzZSxcbiAgICAgIGRyaW5rc09mZmVyOiBmYWxzZVxuICAgIH0sXG4gICAgbmVhcmVzdE91dGxldHM6IFtcbiAgICAgIHtcbiAgICAgICAgbmFtZTogXCJMaWRvIE1hbGwgTWcgUm9hZFwiLFxuICAgICAgICBhZGRyZXNzOiBcIjEvNCwgR3JvdW5kIEZsb29yLCBMaWRvIE1hbGwsIFN3YW1pIFZpdmVrYW5hbmRhIFJvYWQsIEhhbGFzdXJ1LCBCZW5nYWx1cnUsIEthcm5hdGFrYSA1NjAwMDgsIEluZGlhXCIsXG4gICAgICAgIGRpc3RhbmNlOiBcIjQuMSBrbVwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBuYW1lOiBcIktvcmFtYW5nYWxhIDd0aCBibG9ja1wiLFxuICAgICAgICBhZGRyZXNzOiBcIjExOCwgMXN0IEZsb29yICw4MCBGZWV0IFJkLCBLSEIgQ29sb255LCA3dGggQmxvY2ssIEtvcmFtYW5nYWxhLCBCZW5nYWx1cnVcIixcbiAgICAgICAgZGlzdGFuY2U6IFwiNS44IGttXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHNsb3RzOiB7XG4gICAgICBcIk1vbmRheSB0byBTdW5kYXlcIjoge1xuICAgICAgICBwYXg6IHtcbiAgICAgICAgICBcIjIrMVwiOiBcIkZsZXhpYmxlXCIsXG4gICAgICAgICAgXCIzICYgQWJvdmVcIjogXCJGbGV4aWJsZVwiXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn07ICJdLCJuYW1lcyI6WyJsb2NhdGlvbnMiLCJuYW1lIiwiYWRkcmVzcyIsInRpbWluZ3MiLCJsdW5jaCIsIm9wZW5pbmciLCJsYXN0RW50cnkiLCJjbG9zaW5nIiwiZGlubmVyIiwiYW1lbml0aWVzIiwiYmFyIiwidmFsZXRQYXJraW5nIiwiYmFieUNoYWlyIiwibGlmdCIsIm9mZmVycyIsImNvbXBsaW1lbnRhcnlEcmlua3MiLCJmb29kRmVzdGl2YWwiLCJlYXJseUJpcmQiLCJidWZmZXRPZmZlciIsImFybXlPZmZlciIsImRyaW5rc09mZmVyIiwibmVhcmVzdE91dGxldHMiLCJkaXN0YW5jZSIsInNsb3RzIiwicGF4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/config/locations.ts\n"));

/***/ }),

/***/ "./src/lib/stateMachine.ts":
/*!*********************************!*\
  !*** ./src/lib/stateMachine.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StateMachine: function() { return /* binding */ StateMachine; }\n/* harmony export */ });\n/* harmony import */ var _config_stateMachine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/stateMachine */ \"./src/config/stateMachine.ts\");\n/* harmony import */ var _config_locations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/locations */ \"./src/config/locations.ts\");\n\n\nclass StateMachine {\n    getState() {\n        return this.state;\n    }\n    getCurrentState() {\n        return this.state.currentState;\n    }\n    getCurrentPrompt() {\n        const currentState = _config_stateMachine__WEBPACK_IMPORTED_MODULE_0__.states[this.state.currentState];\n        if (!currentState) {\n            console.error(\"Invalid state: \".concat(this.state.currentState));\n            this.state.currentState = \"START\";\n            return _config_stateMachine__WEBPACK_IMPORTED_MODULE_0__.states.START.prompt;\n        }\n        // Replace placeholders in prompt with actual values\n        let prompt = currentState.prompt;\n        if (this.state.currentState === \"CONFIRM_DETAILS\") {\n            prompt = prompt.replace(\"{phone}\", this.formatPhoneNumber(this.state.phoneNumber || \"\")).replace(\"{name_confirmation}\", this.state.name ? \"your name is \".concat(this.state.name) : \"you preferred not to provide your name\");\n        } else if (this.state.currentState === \"CONFIRM_BOOKING\") {\n            var _this_state_paxSize;\n            prompt = prompt.replace(\"{dateTime}\", this.state.dateTime || \"\").replace(\"{paxSize}\", ((_this_state_paxSize = this.state.paxSize) === null || _this_state_paxSize === void 0 ? void 0 : _this_state_paxSize.toString()) || \"\").replace(\"{location}\", this.state.location || \"\");\n        } else if (this.state.currentState === \"BOOKING_CONFIRMED\") {\n            prompt = prompt.replace(\"{bookingRef}\", this.state.bookingRef || \"BN\" + Date.now().toString().slice(-6));\n        } else if (this.state.currentState === \"CONFIRM_MODIFICATION\") {\n            prompt = prompt.replace(\"{newDateTime}\", this.state.newDateTime || \"\");\n        } else if (this.state.currentState === \"PROVIDE_INFO\") {\n            prompt = prompt.replace(\"{enquiryResponse}\", this.getEnquiryResponse(this.state.enquiryType));\n        }\n        return prompt;\n    }\n    formatPhoneNumber(phone) {\n        return phone.replace(/(\\d{4})(\\d{3})(\\d{3})/, \"$1-$2-$3\");\n    }\n    getEnquiryResponse(type) {\n        const location = this.state.location ? _config_locations__WEBPACK_IMPORTED_MODULE_1__.locations[this.state.location.toLowerCase()] : undefined;\n        if (!location) {\n            return \"I apologize, but I couldn't find information for this location. Please try again.\";\n        }\n        switch(type){\n            case \"1\":\n                return \"Our unlimited buffet includes a wide variety of veg and non-veg starters, main course, and desserts. Please visit us to know the current pricing.\";\n            case \"2\":\n                const offers = [];\n                if (location.offers.complimentaryDrinks) offers.push(location.offers.complimentaryDrinks);\n                if (location.offers.foodFestival) offers.push(\"Ongoing food festival\");\n                if (location.offers.earlyBird) offers.push(\"Early bird discounts available\");\n                if (location.offers.buffetOffer) offers.push(\"Special buffet offers\");\n                if (location.offers.armyOffer) offers.push(\"Special discounts for army personnel\");\n                if (location.offers.drinksOffer) offers.push(\"Special drinks packages available\");\n                return offers.length > 0 ? offers.join(\". \") : \"Currently, we don't have any ongoing special offers.\";\n            case \"3\":\n                const timings = location.timings;\n                return \"Our timings are:\\n\".concat(Object.entries(timings).map((param)=>{\n                    let [day, time] = param;\n                    return \"\".concat(day, \":\\nLunch: \").concat(time.lunch.opening, \" - \").concat(time.lunch.closing, \" (Last entry: \").concat(time.lunch.lastEntry, \")\\nDinner: \").concat(time.dinner.opening, \" - \").concat(time.dinner.closing, \" (Last entry: \").concat(time.dinner.lastEntry, \")\");\n                }).join(\"\\n\"));\n            case \"4\":\n                return \"We are located at: \".concat(location.address, \"\\n\\nNearest landmarks:\\n\").concat(location.nearestOutlets.map((outlet)=>\"\".concat(outlet.name, \" (\").concat(outlet.distance, \")\")).join(\"\\n\"));\n            default:\n                return \"I apologize, but I couldn't understand which information you're looking for. Could you please select from the options provided?\";\n        }\n    }\n    async processInput(input) {\n        // Special handling for initial state\n        if (input === \"START\") {\n            return this.getCurrentPrompt();\n        }\n        const currentState = _config_stateMachine__WEBPACK_IMPORTED_MODULE_0__.states[this.state.currentState];\n        if (!currentState) {\n            console.error(\"Invalid state: \".concat(this.state.currentState));\n            this.state.currentState = \"START\";\n            return _config_stateMachine__WEBPACK_IMPORTED_MODULE_0__.states.START.prompt;\n        }\n        // Validate input if validation function exists\n        if (currentState.validation && !currentState.validation(input)) {\n            return currentState.prompt;\n        }\n        // Determine next state based on input\n        let nextState = \"\";\n        switch(this.state.currentState){\n            case \"START\":\n                const location = input.toLowerCase().trim();\n                nextState = \"VERIFY_LOCATION\";\n                this.state.location = location;\n                break;\n            case \"VERIFY_LOCATION\":\n                var _this_state_location;\n                nextState = this.availableProperties.has(((_this_state_location = this.state.location) === null || _this_state_location === void 0 ? void 0 : _this_state_location.toLowerCase()) || \"\") ? \"COLLECT_NAME\" : \"LOCATION_NOT_FOUND\";\n                break;\n            case \"LOCATION_NOT_FOUND\":\n                nextState = input.toLowerCase() === \"yes\" ? \"START\" : \"END\";\n                break;\n            case \"COLLECT_NAME\":\n                if (input.toLowerCase() === \"no\" || input.toLowerCase() === \"skip\") {\n                    nextState = \"COLLECT_PHONE\";\n                    this.state.name = undefined;\n                } else {\n                    nextState = \"COLLECT_PHONE\";\n                    this.state.name = input;\n                }\n                break;\n            case \"COLLECT_PHONE\":\n                if (/^\\d{10}$/.test(input)) {\n                    this.state.phoneNumber = input;\n                    nextState = \"CONFIRM_DETAILS\";\n                } else {\n                    return \"I apologize, but I need a valid 10-digit phone number. Could you please provide it again?\";\n                }\n                break;\n            case \"CONFIRM_DETAILS\":\n                nextState = input.toLowerCase() === \"yes\" ? \"DISCOVER\" : \"COLLECT_NAME\";\n                break;\n            case \"DISCOVER\":\n                switch(input){\n                    case \"1\":\n                        nextState = \"COLLECT_DATE_TIME_NEW\";\n                        break;\n                    case \"2\":\n                    case \"3\":\n                        nextState = \"COLLECT_BOOKING_REF\";\n                        this.state.actionType = input === \"2\" ? \"MODIFY\" : \"CANCEL\";\n                        break;\n                    case \"4\":\n                        nextState = \"HANDLE_ENQUIRY\";\n                        break;\n                    default:\n                        return \"Please select a valid option (1-4).\";\n                }\n                break;\n            case \"COLLECT_DATE_TIME_NEW\":\n                this.state.dateTime = input;\n                nextState = \"COLLECT_PAX_SIZE\";\n                break;\n            case \"COLLECT_PAX_SIZE\":\n                const paxSize = parseInt(input);\n                if (isNaN(paxSize) || paxSize <= 0) {\n                    return \"Please provide a valid number of guests.\";\n                }\n                this.state.paxSize = paxSize;\n                nextState = \"CONFIRM_BOOKING\";\n                break;\n            case \"CONFIRM_BOOKING\":\n                switch(input.toLowerCase()){\n                    case \"yes\":\n                        nextState = \"BOOKING_CONFIRMED\";\n                        this.state.bookingRef = \"BN\" + Date.now().toString().slice(-6);\n                        break;\n                    case \"no\":\n                        nextState = \"DISCOVER\";\n                        break;\n                    case \"modify\":\n                        nextState = \"COLLECT_DATE_TIME_NEW\";\n                        break;\n                    default:\n                        return \"Please confirm with 'yes' or 'no', or say 'modify' to change the details.\";\n                }\n                break;\n            case \"COLLECT_BOOKING_REF\":\n                // Simple validation for booking reference\n                if (/^BN\\d{6}$/.test(input)) {\n                    this.state.bookingRef = input;\n                    nextState = \"VERIFY_BOOKING\";\n                } else {\n                    nextState = \"BOOKING_NOT_FOUND\";\n                }\n                break;\n            case \"VERIFY_BOOKING\":\n                switch(input.toLowerCase()){\n                    case \"modify\":\n                        nextState = \"COLLECT_DATE_TIME_MOD\";\n                        break;\n                    case \"cancel\":\n                        nextState = \"CONFIRM_CANCELLATION\";\n                        break;\n                    case \"back\":\n                        nextState = \"DISCOVER\";\n                        break;\n                    default:\n                        return \"Please select 'modify', 'cancel', or 'back'.\";\n                }\n                break;\n            case \"COLLECT_DATE_TIME_MOD\":\n                this.state.newDateTime = input;\n                nextState = \"CONFIRM_MODIFICATION\";\n                break;\n            case \"CONFIRM_MODIFICATION\":\n            case \"CONFIRM_CANCELLATION\":\n                nextState = input.toLowerCase() === \"yes\" ? this.state.currentState === \"CONFIRM_MODIFICATION\" ? \"MODIFICATION_CONFIRMED\" : \"CANCELLATION_CONFIRMED\" : \"VERIFY_BOOKING\";\n                break;\n            case \"HANDLE_ENQUIRY\":\n                if ([\n                    \"1\",\n                    \"2\",\n                    \"3\",\n                    \"4\"\n                ].includes(input)) {\n                    this.state.enquiryType = input;\n                    nextState = \"PROVIDE_INFO\";\n                } else {\n                    return \"Please select a valid option (1-4).\";\n                }\n                break;\n            case \"PROVIDE_INFO\":\n            case \"MODIFICATION_CONFIRMED\":\n            case \"BOOKING_CONFIRMED\":\n            case \"CANCELLATION_CONFIRMED\":\n            case \"END\":\n                nextState = input.toLowerCase() === \"yes\" ? \"DISCOVER\" : \"FINAL\";\n                break;\n            default:\n                nextState = currentState.transitions.NEXT || currentState.transitions.BACK;\n        }\n        // Log state transition\n        this.state.history.push({\n            state: this.state.currentState,\n            input,\n            timestamp: Date.now()\n        });\n        // Update current state\n        this.state.currentState = nextState || this.state.currentState;\n        // Execute action if it exists\n        if (_config_stateMachine__WEBPACK_IMPORTED_MODULE_0__.states[this.state.currentState].action) {\n            await _config_stateMachine__WEBPACK_IMPORTED_MODULE_0__.states[this.state.currentState].action(this.state, input);\n        }\n        return this.getCurrentPrompt();\n    }\n    reset() {\n        this.state = {\n            currentState: \"START\",\n            history: [\n                {\n                    state: \"START\",\n                    input: \"\",\n                    timestamp: Date.now()\n                }\n            ]\n        };\n    }\n    constructor(){\n        this.state = {\n            currentState: \"START\",\n            history: []\n        };\n        // Initialize with available locations from the locations config\n        this.availableProperties = new Set(Object.keys(_config_locations__WEBPACK_IMPORTED_MODULE_1__.locations).map((key)=>key.toLowerCase()));\n        // Initialize with the first message\n        this.state.history.push({\n            state: \"START\",\n            input: \"\",\n            timestamp: Date.now()\n        });\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDekIsS0FBSyxDQUFDbUUsT0FBTyxDQUFDdEMsSUFBSSxDQUFDO1lBQ3RCN0IsT0FBTztZQUNQcUQsT0FBTztZQUNQZSxXQUFXbkQsS0FBS0MsR0FBRztRQUNyQjtJQUNGO0FBZ1JGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvc3RhdGVNYWNoaW5lLnRzPzhhZDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhdFN0YXRlIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHsgc3RhdGVzLCBTdGF0ZUNvbmZpZyB9IGZyb20gJy4uL2NvbmZpZy9zdGF0ZU1hY2hpbmUnO1xuaW1wb3J0IHsgbG9jYXRpb25zIH0gZnJvbSAnLi4vY29uZmlnL2xvY2F0aW9ucyc7XG5cbmV4cG9ydCBjbGFzcyBTdGF0ZU1hY2hpbmUge1xuICBwcml2YXRlIHN0YXRlOiBDaGF0U3RhdGU7XG4gIHByaXZhdGUgYXZhaWxhYmxlUHJvcGVydGllczogU2V0PHN0cmluZz47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGN1cnJlbnRTdGF0ZTogJ1NUQVJUJyxcbiAgICAgIGhpc3Rvcnk6IFtdXG4gICAgfTtcbiAgICAvLyBJbml0aWFsaXplIHdpdGggYXZhaWxhYmxlIGxvY2F0aW9ucyBmcm9tIHRoZSBsb2NhdGlvbnMgY29uZmlnXG4gICAgdGhpcy5hdmFpbGFibGVQcm9wZXJ0aWVzID0gbmV3IFNldChPYmplY3Qua2V5cyhsb2NhdGlvbnMpLm1hcChrZXkgPT4ga2V5LnRvTG93ZXJDYXNlKCkpKTtcblxuICAgIC8vIEluaXRpYWxpemUgd2l0aCB0aGUgZmlyc3QgbWVzc2FnZVxuICAgIHRoaXMuc3RhdGUuaGlzdG9yeS5wdXNoKHtcbiAgICAgIHN0YXRlOiAnU1RBUlQnLFxuICAgICAgaW5wdXQ6ICcnLFxuICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpXG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgZ2V0U3RhdGUoKTogQ2hhdFN0YXRlIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRDdXJyZW50U3RhdGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5jdXJyZW50U3RhdGU7XG4gIH1cblxuICBwdWJsaWMgZ2V0Q3VycmVudFByb21wdCgpOiBzdHJpbmcge1xuICAgIGNvbnN0IGN1cnJlbnRTdGF0ZSA9IHN0YXRlc1t0aGlzLnN0YXRlLmN1cnJlbnRTdGF0ZV07XG4gICAgaWYgKCFjdXJyZW50U3RhdGUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYEludmFsaWQgc3RhdGU6ICR7dGhpcy5zdGF0ZS5jdXJyZW50U3RhdGV9YCk7XG4gICAgICB0aGlzLnN0YXRlLmN1cnJlbnRTdGF0ZSA9ICdTVEFSVCc7XG4gICAgICByZXR1cm4gc3RhdGVzLlNUQVJULnByb21wdDtcbiAgICB9XG5cbiAgICAvLyBSZXBsYWNlIHBsYWNlaG9sZGVycyBpbiBwcm9tcHQgd2l0aCBhY3R1YWwgdmFsdWVzXG4gICAgbGV0IHByb21wdCA9IGN1cnJlbnRTdGF0ZS5wcm9tcHQ7XG4gICAgaWYgKHRoaXMuc3RhdGUuY3VycmVudFN0YXRlID09PSAnQ09ORklSTV9ERVRBSUxTJykge1xuICAgICAgcHJvbXB0ID0gcHJvbXB0XG4gICAgICAgIC5yZXBsYWNlKCd7cGhvbmV9JywgdGhpcy5mb3JtYXRQaG9uZU51bWJlcih0aGlzLnN0YXRlLnBob25lTnVtYmVyIHx8ICcnKSlcbiAgICAgICAgLnJlcGxhY2UoJ3tuYW1lX2NvbmZpcm1hdGlvbn0nLCB0aGlzLnN0YXRlLm5hbWUgPyBgeW91ciBuYW1lIGlzICR7dGhpcy5zdGF0ZS5uYW1lfWAgOiAneW91IHByZWZlcnJlZCBub3QgdG8gcHJvdmlkZSB5b3VyIG5hbWUnKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuc3RhdGUuY3VycmVudFN0YXRlID09PSAnQ09ORklSTV9CT09LSU5HJykge1xuICAgICAgcHJvbXB0ID0gcHJvbXB0XG4gICAgICAgIC5yZXBsYWNlKCd7ZGF0ZVRpbWV9JywgdGhpcy5zdGF0ZS5kYXRlVGltZSB8fCAnJylcbiAgICAgICAgLnJlcGxhY2UoJ3twYXhTaXplfScsIHRoaXMuc3RhdGUucGF4U2l6ZT8udG9TdHJpbmcoKSB8fCAnJylcbiAgICAgICAgLnJlcGxhY2UoJ3tsb2NhdGlvbn0nLCB0aGlzLnN0YXRlLmxvY2F0aW9uIHx8ICcnKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuc3RhdGUuY3VycmVudFN0YXRlID09PSAnQk9PS0lOR19DT05GSVJNRUQnKSB7XG4gICAgICBwcm9tcHQgPSBwcm9tcHQucmVwbGFjZSgne2Jvb2tpbmdSZWZ9JywgdGhpcy5zdGF0ZS5ib29raW5nUmVmIHx8ICdCTicgKyBEYXRlLm5vdygpLnRvU3RyaW5nKCkuc2xpY2UoLTYpKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuc3RhdGUuY3VycmVudFN0YXRlID09PSAnQ09ORklSTV9NT0RJRklDQVRJT04nKSB7XG4gICAgICBwcm9tcHQgPSBwcm9tcHQucmVwbGFjZSgne25ld0RhdGVUaW1lfScsIHRoaXMuc3RhdGUubmV3RGF0ZVRpbWUgfHwgJycpO1xuICAgIH0gZWxzZSBpZiAodGhpcy5zdGF0ZS5jdXJyZW50U3RhdGUgPT09ICdQUk9WSURFX0lORk8nKSB7XG4gICAgICBwcm9tcHQgPSBwcm9tcHQucmVwbGFjZSgne2VucXVpcnlSZXNwb25zZX0nLCB0aGlzLmdldEVucXVpcnlSZXNwb25zZSh0aGlzLnN0YXRlLmVucXVpcnlUeXBlKSk7XG4gICAgfVxuICAgIHJldHVybiBwcm9tcHQ7XG4gIH1cblxuICBwcml2YXRlIGZvcm1hdFBob25lTnVtYmVyKHBob25lOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiBwaG9uZS5yZXBsYWNlKC8oXFxkezR9KShcXGR7M30pKFxcZHszfSkvLCAnJDEtJDItJDMnKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0RW5xdWlyeVJlc3BvbnNlKHR5cGU6IHN0cmluZyB8IHVuZGVmaW5lZCk6IHN0cmluZyB7XG4gICAgY29uc3QgbG9jYXRpb24gPSB0aGlzLnN0YXRlLmxvY2F0aW9uID8gbG9jYXRpb25zW3RoaXMuc3RhdGUubG9jYXRpb24udG9Mb3dlckNhc2UoKV0gOiB1bmRlZmluZWQ7XG4gICAgXG4gICAgaWYgKCFsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIFwiSSBhcG9sb2dpemUsIGJ1dCBJIGNvdWxkbid0IGZpbmQgaW5mb3JtYXRpb24gZm9yIHRoaXMgbG9jYXRpb24uIFBsZWFzZSB0cnkgYWdhaW4uXCI7XG4gICAgfVxuXG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICBjYXNlICcxJzpcbiAgICAgICAgcmV0dXJuIFwiT3VyIHVubGltaXRlZCBidWZmZXQgaW5jbHVkZXMgYSB3aWRlIHZhcmlldHkgb2YgdmVnIGFuZCBub24tdmVnIHN0YXJ0ZXJzLCBtYWluIGNvdXJzZSwgYW5kIGRlc3NlcnRzLiBQbGVhc2UgdmlzaXQgdXMgdG8ga25vdyB0aGUgY3VycmVudCBwcmljaW5nLlwiO1xuICAgICAgY2FzZSAnMic6XG4gICAgICAgIGNvbnN0IG9mZmVycyA9IFtdO1xuICAgICAgICBpZiAobG9jYXRpb24ub2ZmZXJzLmNvbXBsaW1lbnRhcnlEcmlua3MpIG9mZmVycy5wdXNoKGxvY2F0aW9uLm9mZmVycy5jb21wbGltZW50YXJ5RHJpbmtzKTtcbiAgICAgICAgaWYgKGxvY2F0aW9uLm9mZmVycy5mb29kRmVzdGl2YWwpIG9mZmVycy5wdXNoKFwiT25nb2luZyBmb29kIGZlc3RpdmFsXCIpO1xuICAgICAgICBpZiAobG9jYXRpb24ub2ZmZXJzLmVhcmx5QmlyZCkgb2ZmZXJzLnB1c2goXCJFYXJseSBiaXJkIGRpc2NvdW50cyBhdmFpbGFibGVcIik7XG4gICAgICAgIGlmIChsb2NhdGlvbi5vZmZlcnMuYnVmZmV0T2ZmZXIpIG9mZmVycy5wdXNoKFwiU3BlY2lhbCBidWZmZXQgb2ZmZXJzXCIpO1xuICAgICAgICBpZiAobG9jYXRpb24ub2ZmZXJzLmFybXlPZmZlcikgb2ZmZXJzLnB1c2goXCJTcGVjaWFsIGRpc2NvdW50cyBmb3IgYXJteSBwZXJzb25uZWxcIik7XG4gICAgICAgIGlmIChsb2NhdGlvbi5vZmZlcnMuZHJpbmtzT2ZmZXIpIG9mZmVycy5wdXNoKFwiU3BlY2lhbCBkcmlua3MgcGFja2FnZXMgYXZhaWxhYmxlXCIpO1xuICAgICAgICByZXR1cm4gb2ZmZXJzLmxlbmd0aCA+IDAgPyBvZmZlcnMuam9pbihcIi4gXCIpIDogXCJDdXJyZW50bHksIHdlIGRvbid0IGhhdmUgYW55IG9uZ29pbmcgc3BlY2lhbCBvZmZlcnMuXCI7XG4gICAgICBjYXNlICczJzpcbiAgICAgICAgY29uc3QgdGltaW5ncyA9IGxvY2F0aW9uLnRpbWluZ3M7XG4gICAgICAgIHJldHVybiBgT3VyIHRpbWluZ3MgYXJlOlxcbiR7T2JqZWN0LmVudHJpZXModGltaW5ncykubWFwKChbZGF5LCB0aW1lXSkgPT4gXG4gICAgICAgICAgYCR7ZGF5fTpcXG5MdW5jaDogJHt0aW1lLmx1bmNoLm9wZW5pbmd9IC0gJHt0aW1lLmx1bmNoLmNsb3Npbmd9IChMYXN0IGVudHJ5OiAke3RpbWUubHVuY2gubGFzdEVudHJ5fSlcXG5EaW5uZXI6ICR7dGltZS5kaW5uZXIub3BlbmluZ30gLSAke3RpbWUuZGlubmVyLmNsb3Npbmd9IChMYXN0IGVudHJ5OiAke3RpbWUuZGlubmVyLmxhc3RFbnRyeX0pYFxuICAgICAgICApLmpvaW4oJ1xcbicpfWA7XG4gICAgICBjYXNlICc0JzpcbiAgICAgICAgcmV0dXJuIGBXZSBhcmUgbG9jYXRlZCBhdDogJHtsb2NhdGlvbi5hZGRyZXNzfVxcblxcbk5lYXJlc3QgbGFuZG1hcmtzOlxcbiR7bG9jYXRpb24ubmVhcmVzdE91dGxldHMubWFwKG91dGxldCA9PiBcbiAgICAgICAgICBgJHtvdXRsZXQubmFtZX0gKCR7b3V0bGV0LmRpc3RhbmNlfSlgXG4gICAgICAgICkuam9pbignXFxuJyl9YDtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBcIkkgYXBvbG9naXplLCBidXQgSSBjb3VsZG4ndCB1bmRlcnN0YW5kIHdoaWNoIGluZm9ybWF0aW9uIHlvdSdyZSBsb29raW5nIGZvci4gQ291bGQgeW91IHBsZWFzZSBzZWxlY3QgZnJvbSB0aGUgb3B0aW9ucyBwcm92aWRlZD9cIjtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgcHJvY2Vzc0lucHV0KGlucHV0OiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIC8vIFNwZWNpYWwgaGFuZGxpbmcgZm9yIGluaXRpYWwgc3RhdGVcbiAgICBpZiAoaW5wdXQgPT09ICdTVEFSVCcpIHtcbiAgICAgIHJldHVybiB0aGlzLmdldEN1cnJlbnRQcm9tcHQoKTtcbiAgICB9XG5cbiAgICBjb25zdCBjdXJyZW50U3RhdGUgPSBzdGF0ZXNbdGhpcy5zdGF0ZS5jdXJyZW50U3RhdGVdO1xuICAgIGlmICghY3VycmVudFN0YXRlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBJbnZhbGlkIHN0YXRlOiAke3RoaXMuc3RhdGUuY3VycmVudFN0YXRlfWApO1xuICAgICAgdGhpcy5zdGF0ZS5jdXJyZW50U3RhdGUgPSAnU1RBUlQnO1xuICAgICAgcmV0dXJuIHN0YXRlcy5TVEFSVC5wcm9tcHQ7XG4gICAgfVxuXG4gICAgLy8gVmFsaWRhdGUgaW5wdXQgaWYgdmFsaWRhdGlvbiBmdW5jdGlvbiBleGlzdHNcbiAgICBpZiAoY3VycmVudFN0YXRlLnZhbGlkYXRpb24gJiYgIWN1cnJlbnRTdGF0ZS52YWxpZGF0aW9uKGlucHV0KSkge1xuICAgICAgcmV0dXJuIGN1cnJlbnRTdGF0ZS5wcm9tcHQ7XG4gICAgfVxuXG4gICAgLy8gRGV0ZXJtaW5lIG5leHQgc3RhdGUgYmFzZWQgb24gaW5wdXRcbiAgICBsZXQgbmV4dFN0YXRlID0gJyc7XG4gICAgc3dpdGNoICh0aGlzLnN0YXRlLmN1cnJlbnRTdGF0ZSkge1xuICAgICAgY2FzZSAnU1RBUlQnOlxuICAgICAgICBjb25zdCBsb2NhdGlvbiA9IGlucHV0LnRvTG93ZXJDYXNlKCkudHJpbSgpO1xuICAgICAgICBuZXh0U3RhdGUgPSAnVkVSSUZZX0xPQ0FUSU9OJztcbiAgICAgICAgdGhpcy5zdGF0ZS5sb2NhdGlvbiA9IGxvY2F0aW9uO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnVkVSSUZZX0xPQ0FUSU9OJzpcbiAgICAgICAgbmV4dFN0YXRlID0gdGhpcy5hdmFpbGFibGVQcm9wZXJ0aWVzLmhhcyh0aGlzLnN0YXRlLmxvY2F0aW9uPy50b0xvd2VyQ2FzZSgpIHx8ICcnKVxuICAgICAgICAgID8gJ0NPTExFQ1RfTkFNRSdcbiAgICAgICAgICA6ICdMT0NBVElPTl9OT1RfRk9VTkQnO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnTE9DQVRJT05fTk9UX0ZPVU5EJzpcbiAgICAgICAgbmV4dFN0YXRlID0gaW5wdXQudG9Mb3dlckNhc2UoKSA9PT0gJ3llcycgPyAnU1RBUlQnIDogJ0VORCc7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdDT0xMRUNUX05BTUUnOlxuICAgICAgICBpZiAoaW5wdXQudG9Mb3dlckNhc2UoKSA9PT0gJ25vJyB8fCBpbnB1dC50b0xvd2VyQ2FzZSgpID09PSAnc2tpcCcpIHtcbiAgICAgICAgICBuZXh0U3RhdGUgPSAnQ09MTEVDVF9QSE9ORSc7XG4gICAgICAgICAgdGhpcy5zdGF0ZS5uYW1lID0gdW5kZWZpbmVkO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5leHRTdGF0ZSA9ICdDT0xMRUNUX1BIT05FJztcbiAgICAgICAgICB0aGlzLnN0YXRlLm5hbWUgPSBpbnB1dDtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnQ09MTEVDVF9QSE9ORSc6XG4gICAgICAgIGlmICgvXlxcZHsxMH0kLy50ZXN0KGlucHV0KSkge1xuICAgICAgICAgIHRoaXMuc3RhdGUucGhvbmVOdW1iZXIgPSBpbnB1dDtcbiAgICAgICAgICBuZXh0U3RhdGUgPSAnQ09ORklSTV9ERVRBSUxTJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gXCJJIGFwb2xvZ2l6ZSwgYnV0IEkgbmVlZCBhIHZhbGlkIDEwLWRpZ2l0IHBob25lIG51bWJlci4gQ291bGQgeW91IHBsZWFzZSBwcm92aWRlIGl0IGFnYWluP1wiO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdDT05GSVJNX0RFVEFJTFMnOlxuICAgICAgICBuZXh0U3RhdGUgPSBpbnB1dC50b0xvd2VyQ2FzZSgpID09PSAneWVzJyA/ICdESVNDT1ZFUicgOiAnQ09MTEVDVF9OQU1FJztcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ0RJU0NPVkVSJzpcbiAgICAgICAgc3dpdGNoIChpbnB1dCkge1xuICAgICAgICAgIGNhc2UgJzEnOlxuICAgICAgICAgICAgbmV4dFN0YXRlID0gJ0NPTExFQ1RfREFURV9USU1FX05FVyc7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlICcyJzpcbiAgICAgICAgICBjYXNlICczJzpcbiAgICAgICAgICAgIG5leHRTdGF0ZSA9ICdDT0xMRUNUX0JPT0tJTkdfUkVGJztcbiAgICAgICAgICAgIHRoaXMuc3RhdGUuYWN0aW9uVHlwZSA9IGlucHV0ID09PSAnMicgPyAnTU9ESUZZJyA6ICdDQU5DRUwnO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAnNCc6XG4gICAgICAgICAgICBuZXh0U3RhdGUgPSAnSEFORExFX0VOUVVJUlknO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBcIlBsZWFzZSBzZWxlY3QgYSB2YWxpZCBvcHRpb24gKDEtNCkuXCI7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ0NPTExFQ1RfREFURV9USU1FX05FVyc6XG4gICAgICAgIHRoaXMuc3RhdGUuZGF0ZVRpbWUgPSBpbnB1dDtcbiAgICAgICAgbmV4dFN0YXRlID0gJ0NPTExFQ1RfUEFYX1NJWkUnO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnQ09MTEVDVF9QQVhfU0laRSc6XG4gICAgICAgIGNvbnN0IHBheFNpemUgPSBwYXJzZUludChpbnB1dCk7XG4gICAgICAgIGlmIChpc05hTihwYXhTaXplKSB8fCBwYXhTaXplIDw9IDApIHtcbiAgICAgICAgICByZXR1cm4gXCJQbGVhc2UgcHJvdmlkZSBhIHZhbGlkIG51bWJlciBvZiBndWVzdHMuXCI7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zdGF0ZS5wYXhTaXplID0gcGF4U2l6ZTtcbiAgICAgICAgbmV4dFN0YXRlID0gJ0NPTkZJUk1fQk9PS0lORyc7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdDT05GSVJNX0JPT0tJTkcnOlxuICAgICAgICBzd2l0Y2ggKGlucHV0LnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgICBjYXNlICd5ZXMnOlxuICAgICAgICAgICAgbmV4dFN0YXRlID0gJ0JPT0tJTkdfQ09ORklSTUVEJztcbiAgICAgICAgICAgIHRoaXMuc3RhdGUuYm9va2luZ1JlZiA9ICdCTicgKyBEYXRlLm5vdygpLnRvU3RyaW5nKCkuc2xpY2UoLTYpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAnbm8nOlxuICAgICAgICAgICAgbmV4dFN0YXRlID0gJ0RJU0NPVkVSJztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJ21vZGlmeSc6XG4gICAgICAgICAgICBuZXh0U3RhdGUgPSAnQ09MTEVDVF9EQVRFX1RJTUVfTkVXJztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gXCJQbGVhc2UgY29uZmlybSB3aXRoICd5ZXMnIG9yICdubycsIG9yIHNheSAnbW9kaWZ5JyB0byBjaGFuZ2UgdGhlIGRldGFpbHMuXCI7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ0NPTExFQ1RfQk9PS0lOR19SRUYnOlxuICAgICAgICAvLyBTaW1wbGUgdmFsaWRhdGlvbiBmb3IgYm9va2luZyByZWZlcmVuY2VcbiAgICAgICAgaWYgKC9eQk5cXGR7Nn0kLy50ZXN0KGlucHV0KSkge1xuICAgICAgICAgIHRoaXMuc3RhdGUuYm9va2luZ1JlZiA9IGlucHV0O1xuICAgICAgICAgIG5leHRTdGF0ZSA9ICdWRVJJRllfQk9PS0lORyc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbmV4dFN0YXRlID0gJ0JPT0tJTkdfTk9UX0ZPVU5EJztcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnVkVSSUZZX0JPT0tJTkcnOlxuICAgICAgICBzd2l0Y2ggKGlucHV0LnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgICBjYXNlICdtb2RpZnknOlxuICAgICAgICAgICAgbmV4dFN0YXRlID0gJ0NPTExFQ1RfREFURV9USU1FX01PRCc7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlICdjYW5jZWwnOlxuICAgICAgICAgICAgbmV4dFN0YXRlID0gJ0NPTkZJUk1fQ0FOQ0VMTEFUSU9OJztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJ2JhY2snOlxuICAgICAgICAgICAgbmV4dFN0YXRlID0gJ0RJU0NPVkVSJztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gXCJQbGVhc2Ugc2VsZWN0ICdtb2RpZnknLCAnY2FuY2VsJywgb3IgJ2JhY2snLlwiO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdDT0xMRUNUX0RBVEVfVElNRV9NT0QnOlxuICAgICAgICB0aGlzLnN0YXRlLm5ld0RhdGVUaW1lID0gaW5wdXQ7XG4gICAgICAgIG5leHRTdGF0ZSA9ICdDT05GSVJNX01PRElGSUNBVElPTic7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdDT05GSVJNX01PRElGSUNBVElPTic6XG4gICAgICBjYXNlICdDT05GSVJNX0NBTkNFTExBVElPTic6XG4gICAgICAgIG5leHRTdGF0ZSA9IGlucHV0LnRvTG93ZXJDYXNlKCkgPT09ICd5ZXMnIFxuICAgICAgICAgID8gKHRoaXMuc3RhdGUuY3VycmVudFN0YXRlID09PSAnQ09ORklSTV9NT0RJRklDQVRJT04nID8gJ01PRElGSUNBVElPTl9DT05GSVJNRUQnIDogJ0NBTkNFTExBVElPTl9DT05GSVJNRUQnKVxuICAgICAgICAgIDogJ1ZFUklGWV9CT09LSU5HJztcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ0hBTkRMRV9FTlFVSVJZJzpcbiAgICAgICAgaWYgKFsnMScsICcyJywgJzMnLCAnNCddLmluY2x1ZGVzKGlucHV0KSkge1xuICAgICAgICAgIHRoaXMuc3RhdGUuZW5xdWlyeVR5cGUgPSBpbnB1dDtcbiAgICAgICAgICBuZXh0U3RhdGUgPSAnUFJPVklERV9JTkZPJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gXCJQbGVhc2Ugc2VsZWN0IGEgdmFsaWQgb3B0aW9uICgxLTQpLlwiO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdQUk9WSURFX0lORk8nOlxuICAgICAgY2FzZSAnTU9ESUZJQ0FUSU9OX0NPTkZJUk1FRCc6XG4gICAgICBjYXNlICdCT09LSU5HX0NPTkZJUk1FRCc6XG4gICAgICBjYXNlICdDQU5DRUxMQVRJT05fQ09ORklSTUVEJzpcbiAgICAgIGNhc2UgJ0VORCc6XG4gICAgICAgIG5leHRTdGF0ZSA9IGlucHV0LnRvTG93ZXJDYXNlKCkgPT09ICd5ZXMnID8gJ0RJU0NPVkVSJyA6ICdGSU5BTCc7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBuZXh0U3RhdGUgPSBjdXJyZW50U3RhdGUudHJhbnNpdGlvbnMuTkVYVCB8fCBjdXJyZW50U3RhdGUudHJhbnNpdGlvbnMuQkFDSztcbiAgICB9XG5cbiAgICAvLyBMb2cgc3RhdGUgdHJhbnNpdGlvblxuICAgIHRoaXMuc3RhdGUuaGlzdG9yeS5wdXNoKHtcbiAgICAgIHN0YXRlOiB0aGlzLnN0YXRlLmN1cnJlbnRTdGF0ZSxcbiAgICAgIGlucHV0LFxuICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpXG4gICAgfSk7XG5cbiAgICAvLyBVcGRhdGUgY3VycmVudCBzdGF0ZVxuICAgIHRoaXMuc3RhdGUuY3VycmVudFN0YXRlID0gbmV4dFN0YXRlIHx8IHRoaXMuc3RhdGUuY3VycmVudFN0YXRlO1xuXG4gICAgLy8gRXhlY3V0ZSBhY3Rpb24gaWYgaXQgZXhpc3RzXG4gICAgaWYgKHN0YXRlc1t0aGlzLnN0YXRlLmN1cnJlbnRTdGF0ZV0uYWN0aW9uKSB7XG4gICAgICBhd2FpdCBzdGF0ZXNbdGhpcy5zdGF0ZS5jdXJyZW50U3RhdGVdLmFjdGlvbiEodGhpcy5zdGF0ZSwgaW5wdXQpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmdldEN1cnJlbnRQcm9tcHQoKTtcbiAgfVxuXG4gIHB1YmxpYyByZXNldCgpOiB2b2lkIHtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgY3VycmVudFN0YXRlOiAnU1RBUlQnLFxuICAgICAgaGlzdG9yeTogW3tcbiAgICAgICAgc3RhdGU6ICdTVEFSVCcsXG4gICAgICAgIGlucHV0OiAnJyxcbiAgICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpXG4gICAgICB9XVxuICAgIH07XG4gIH1cbn0gIl0sIm5hbWVzIjpbInN0YXRlcyIsImxvY2F0aW9ucyIsIlN0YXRlTWFjaGluZSIsImdldFN0YXRlIiwic3RhdGUiLCJnZXRDdXJyZW50U3RhdGUiLCJjdXJyZW50U3RhdGUiLCJnZXRDdXJyZW50UHJvbXB0IiwiY29uc29sZSIsImVycm9yIiwiU1RBUlQiLCJwcm9tcHQiLCJyZXBsYWNlIiwiZm9ybWF0UGhvbmVOdW1iZXIiLCJwaG9uZU51bWJlciIsIm5hbWUiLCJkYXRlVGltZSIsInBheFNpemUiLCJ0b1N0cmluZyIsImxvY2F0aW9uIiwiYm9va2luZ1JlZiIsIkRhdGUiLCJub3ciLCJzbGljZSIsIm5ld0RhdGVUaW1lIiwiZ2V0RW5xdWlyeVJlc3BvbnNlIiwiZW5xdWlyeVR5cGUiLCJwaG9uZSIsInR5cGUiLCJ0b0xvd2VyQ2FzZSIsInVuZGVmaW5lZCIsIm9mZmVycyIsImNvbXBsaW1lbnRhcnlEcmlua3MiLCJwdXNoIiwiZm9vZEZlc3RpdmFsIiwiZWFybHlCaXJkIiwiYnVmZmV0T2ZmZXIiLCJhcm15T2ZmZXIiLCJkcmlua3NPZmZlciIsImxlbmd0aCIsImpvaW4iLCJ0aW1pbmdzIiwiT2JqZWN0IiwiZW50cmllcyIsIm1hcCIsImRheSIsInRpbWUiLCJsdW5jaCIsIm9wZW5pbmciLCJjbG9zaW5nIiwibGFzdEVudHJ5IiwiZGlubmVyIiwiYWRkcmVzcyIsIm5lYXJlc3RPdXRsZXRzIiwib3V0bGV0IiwiZGlzdGFuY2UiLCJwcm9jZXNzSW5wdXQiLCJpbnB1dCIsInZhbGlkYXRpb24iLCJuZXh0U3RhdGUiLCJ0cmltIiwiYXZhaWxhYmxlUHJvcGVydGllcyIsImhhcyIsInRlc3QiLCJhY3Rpb25UeXBlIiwicGFyc2VJbnQiLCJpc05hTiIsImluY2x1ZGVzIiwidHJhbnNpdGlvbnMiLCJORVhUIiwiQkFDSyIsImhpc3RvcnkiLCJ0aW1lc3RhbXAiLCJhY3Rpb24iLCJyZXNldCIsImNvbnN0cnVjdG9yIiwiU2V0Iiwia2V5cyIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/lib/stateMachine.ts\n"));

/***/ })

});