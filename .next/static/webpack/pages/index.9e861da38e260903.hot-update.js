"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/services/chatService.ts":
/*!*************************************!*\
  !*** ./src/services/chatService.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatService: function() { return /* binding */ ChatService; }\n/* harmony export */ });\n/* harmony import */ var _lib_stateMachine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/stateMachine */ \"./src/lib/stateMachine.ts\");\n\nclass ChatService {\n    async logToAnalytics(state) {\n        try {\n            const analysis = {\n                outcome: state.currentState,\n                call_time: Date.now() - this.messages[0].timestamp,\n                call_status: \"completed\",\n                call_transcript: this.messages.map((m)=>\"\".concat(m.role, \": \").concat(m.content)).join(\"\\n\"),\n                location: state.location || \"\",\n                name: state.name,\n                phone_number: state.phoneNumber,\n                booking_ref: state.bookingRef,\n                date_time: state.dateTime,\n                pax_size: state.paxSize,\n                action_type: state.actionType,\n                metadata: {},\n                questions_asked: this.messages.filter((m)=>m.role === \"assistant\").map((m)=>m.content)\n            };\n            await fetch(\"/api/log-conversation\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(analysis)\n            });\n        } catch (error) {\n            console.error(\"Failed to log conversation:\", error);\n        }\n    }\n    async processInput(input) {\n        // Log user input\n        this.messages.push({\n            role: \"user\",\n            content: input,\n            timestamp: Date.now()\n        });\n        // Process input through state machine\n        const response = await this.stateMachine.processInput(input);\n        // Log assistant response\n        this.messages.push({\n            role: \"assistant\",\n            content: response,\n            timestamp: Date.now()\n        });\n        // If we've reached a final state, log the conversation\n        const currentState = this.stateMachine.getCurrentState();\n        if (currentState === \"FINAL\" || currentState === \"BOOKING_CONFIRMED\" || currentState === \"MODIFICATION_CONFIRMED\" || currentState === \"CANCELLATION_CONFIRMED\") {\n            await this.logToAnalytics(this.stateMachine.getState());\n        }\n        return response;\n    }\n    getCurrentState() {\n        return this.stateMachine.getCurrentState();\n    }\n    getMessages() {\n        return this.messages;\n    }\n    reset() {\n        this.stateMachine.reset();\n        this.messages = [];\n    }\n    constructor(){\n        this.messages = [];\n        this.stateMachine = new _lib_stateMachine__WEBPACK_IMPORTED_MODULE_0__.StateMachine();\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2VydmljZXMvY2hhdFNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDbUQ7QUFFNUMsTUFBTUM7SUFTWCxNQUFjQyxlQUFlQyxLQUFnQixFQUFpQjtRQUM1RCxJQUFJO1lBQ0YsTUFBTUMsV0FBNkI7Z0JBQ2pDQyxTQUFTRixNQUFNRyxZQUFZO2dCQUMzQkMsV0FBV0MsS0FBS0MsR0FBRyxLQUFLLElBQUksQ0FBQ0MsUUFBUSxDQUFDLEVBQUUsQ0FBQ0MsU0FBUztnQkFDbERDLGFBQWE7Z0JBQ2JDLGlCQUFpQixJQUFJLENBQUNILFFBQVEsQ0FBQ0ksR0FBRyxDQUFDQyxDQUFBQSxJQUFLLEdBQWNBLE9BQVhBLEVBQUVDLElBQUksRUFBQyxNQUFjLE9BQVZELEVBQUVFLE9BQU8sR0FBSUMsSUFBSSxDQUFDO2dCQUN4RUMsVUFBVWhCLE1BQU1nQixRQUFRLElBQUk7Z0JBQzVCQyxNQUFNakIsTUFBTWlCLElBQUk7Z0JBQ2hCQyxjQUFjbEIsTUFBTW1CLFdBQVc7Z0JBQy9CQyxhQUFhcEIsTUFBTXFCLFVBQVU7Z0JBQzdCQyxXQUFXdEIsTUFBTXVCLFFBQVE7Z0JBQ3pCQyxVQUFVeEIsTUFBTXlCLE9BQU87Z0JBQ3ZCQyxhQUFhMUIsTUFBTTJCLFVBQVU7Z0JBQzdCQyxVQUFVLENBQUM7Z0JBQ1hDLGlCQUFpQixJQUFJLENBQUN0QixRQUFRLENBQzNCdUIsTUFBTSxDQUFDbEIsQ0FBQUEsSUFBS0EsRUFBRUMsSUFBSSxLQUFLLGFBQ3ZCRixHQUFHLENBQUNDLENBQUFBLElBQUtBLEVBQUVFLE9BQU87WUFDdkI7WUFFQSxNQUFNaUIsTUFBTSx5QkFBeUI7Z0JBQ25DQyxRQUFRO2dCQUNSQyxTQUFTO29CQUNQLGdCQUFnQjtnQkFDbEI7Z0JBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ25DO1lBQ3ZCO1FBQ0YsRUFBRSxPQUFPb0MsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsK0JBQStCQTtRQUMvQztJQUNGO0lBRUEsTUFBYUUsYUFBYUMsS0FBYSxFQUFtQjtRQUN4RCxpQkFBaUI7UUFDakIsSUFBSSxDQUFDakMsUUFBUSxDQUFDa0MsSUFBSSxDQUFDO1lBQ2pCNUIsTUFBTTtZQUNOQyxTQUFTMEI7WUFDVGhDLFdBQVdILEtBQUtDLEdBQUc7UUFDckI7UUFFQSxzQ0FBc0M7UUFDdEMsTUFBTW9DLFdBQVcsTUFBTSxJQUFJLENBQUNDLFlBQVksQ0FBQ0osWUFBWSxDQUFDQztRQUV0RCx5QkFBeUI7UUFDekIsSUFBSSxDQUFDakMsUUFBUSxDQUFDa0MsSUFBSSxDQUFDO1lBQ2pCNUIsTUFBTTtZQUNOQyxTQUFTNEI7WUFDVGxDLFdBQVdILEtBQUtDLEdBQUc7UUFDckI7UUFFQSx1REFBdUQ7UUFDdkQsTUFBTUgsZUFBZSxJQUFJLENBQUN3QyxZQUFZLENBQUNDLGVBQWU7UUFDdEQsSUFBSXpDLGlCQUFpQixXQUNqQkEsaUJBQWlCLHVCQUNqQkEsaUJBQWlCLDRCQUNqQkEsaUJBQWlCLDBCQUEwQjtZQUM3QyxNQUFNLElBQUksQ0FBQ0osY0FBYyxDQUFDLElBQUksQ0FBQzRDLFlBQVksQ0FBQ0UsUUFBUTtRQUN0RDtRQUVBLE9BQU9IO0lBQ1Q7SUFFT0Usa0JBQTBCO1FBQy9CLE9BQU8sSUFBSSxDQUFDRCxZQUFZLENBQUNDLGVBQWU7SUFDMUM7SUFFT0UsY0FBeUI7UUFDOUIsT0FBTyxJQUFJLENBQUN2QyxRQUFRO0lBQ3RCO0lBRU93QyxRQUFjO1FBQ25CLElBQUksQ0FBQ0osWUFBWSxDQUFDSSxLQUFLO1FBQ3ZCLElBQUksQ0FBQ3hDLFFBQVEsR0FBRyxFQUFFO0lBQ3BCO0lBOUVBeUMsYUFBYztRQUNaLElBQUksQ0FBQ3pDLFFBQVEsR0FBRyxFQUFFO1FBQ2xCLElBQUksQ0FBQ29DLFlBQVksR0FBRyxJQUFJOUMsMkRBQVlBO0lBQ3RDO0FBNEVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zZXJ2aWNlcy9jaGF0U2VydmljZS50cz83YzkwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYXRTdGF0ZSwgTWVzc2FnZSwgUG9zdENhbGxBbmFseXNpcyB9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7IFN0YXRlTWFjaGluZSB9IGZyb20gJy4uL2xpYi9zdGF0ZU1hY2hpbmUnO1xuXG5leHBvcnQgY2xhc3MgQ2hhdFNlcnZpY2Uge1xuICBwcml2YXRlIG1lc3NhZ2VzOiBNZXNzYWdlW107XG4gIHByaXZhdGUgc3RhdGVNYWNoaW5lOiBTdGF0ZU1hY2hpbmU7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5tZXNzYWdlcyA9IFtdO1xuICAgIHRoaXMuc3RhdGVNYWNoaW5lID0gbmV3IFN0YXRlTWFjaGluZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyBsb2dUb0FuYWx5dGljcyhzdGF0ZTogQ2hhdFN0YXRlKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGFuYWx5c2lzOiBQb3N0Q2FsbEFuYWx5c2lzID0ge1xuICAgICAgICBvdXRjb21lOiBzdGF0ZS5jdXJyZW50U3RhdGUsXG4gICAgICAgIGNhbGxfdGltZTogRGF0ZS5ub3coKSAtIHRoaXMubWVzc2FnZXNbMF0udGltZXN0YW1wLFxuICAgICAgICBjYWxsX3N0YXR1czogJ2NvbXBsZXRlZCcsXG4gICAgICAgIGNhbGxfdHJhbnNjcmlwdDogdGhpcy5tZXNzYWdlcy5tYXAobSA9PiBgJHttLnJvbGV9OiAke20uY29udGVudH1gKS5qb2luKCdcXG4nKSxcbiAgICAgICAgbG9jYXRpb246IHN0YXRlLmxvY2F0aW9uIHx8ICcnLFxuICAgICAgICBuYW1lOiBzdGF0ZS5uYW1lLFxuICAgICAgICBwaG9uZV9udW1iZXI6IHN0YXRlLnBob25lTnVtYmVyLFxuICAgICAgICBib29raW5nX3JlZjogc3RhdGUuYm9va2luZ1JlZixcbiAgICAgICAgZGF0ZV90aW1lOiBzdGF0ZS5kYXRlVGltZSxcbiAgICAgICAgcGF4X3NpemU6IHN0YXRlLnBheFNpemUsXG4gICAgICAgIGFjdGlvbl90eXBlOiBzdGF0ZS5hY3Rpb25UeXBlLFxuICAgICAgICBtZXRhZGF0YToge30sXG4gICAgICAgIHF1ZXN0aW9uc19hc2tlZDogdGhpcy5tZXNzYWdlc1xuICAgICAgICAgIC5maWx0ZXIobSA9PiBtLnJvbGUgPT09ICdhc3Npc3RhbnQnKVxuICAgICAgICAgIC5tYXAobSA9PiBtLmNvbnRlbnQpXG4gICAgICB9O1xuXG4gICAgICBhd2FpdCBmZXRjaCgnL2FwaS9sb2ctY29udmVyc2F0aW9uJywge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYW5hbHlzaXMpXG4gICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGxvZyBjb252ZXJzYXRpb246JywgZXJyb3IpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBwcm9jZXNzSW5wdXQoaW5wdXQ6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgLy8gTG9nIHVzZXIgaW5wdXRcbiAgICB0aGlzLm1lc3NhZ2VzLnB1c2goe1xuICAgICAgcm9sZTogJ3VzZXInLFxuICAgICAgY29udGVudDogaW5wdXQsXG4gICAgICB0aW1lc3RhbXA6IERhdGUubm93KClcbiAgICB9KTtcblxuICAgIC8vIFByb2Nlc3MgaW5wdXQgdGhyb3VnaCBzdGF0ZSBtYWNoaW5lXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLnN0YXRlTWFjaGluZS5wcm9jZXNzSW5wdXQoaW5wdXQpO1xuICAgIFxuICAgIC8vIExvZyBhc3Npc3RhbnQgcmVzcG9uc2VcbiAgICB0aGlzLm1lc3NhZ2VzLnB1c2goe1xuICAgICAgcm9sZTogJ2Fzc2lzdGFudCcsXG4gICAgICBjb250ZW50OiByZXNwb25zZSxcbiAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKVxuICAgIH0pO1xuXG4gICAgLy8gSWYgd2UndmUgcmVhY2hlZCBhIGZpbmFsIHN0YXRlLCBsb2cgdGhlIGNvbnZlcnNhdGlvblxuICAgIGNvbnN0IGN1cnJlbnRTdGF0ZSA9IHRoaXMuc3RhdGVNYWNoaW5lLmdldEN1cnJlbnRTdGF0ZSgpO1xuICAgIGlmIChjdXJyZW50U3RhdGUgPT09ICdGSU5BTCcgfHwgXG4gICAgICAgIGN1cnJlbnRTdGF0ZSA9PT0gJ0JPT0tJTkdfQ09ORklSTUVEJyB8fCBcbiAgICAgICAgY3VycmVudFN0YXRlID09PSAnTU9ESUZJQ0FUSU9OX0NPTkZJUk1FRCcgfHwgXG4gICAgICAgIGN1cnJlbnRTdGF0ZSA9PT0gJ0NBTkNFTExBVElPTl9DT05GSVJNRUQnKSB7XG4gICAgICBhd2FpdCB0aGlzLmxvZ1RvQW5hbHl0aWNzKHRoaXMuc3RhdGVNYWNoaW5lLmdldFN0YXRlKCkpO1xuICAgIH1cblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRDdXJyZW50U3RhdGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZU1hY2hpbmUuZ2V0Q3VycmVudFN0YXRlKCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0TWVzc2FnZXMoKTogTWVzc2FnZVtdIHtcbiAgICByZXR1cm4gdGhpcy5tZXNzYWdlcztcbiAgfVxuXG4gIHB1YmxpYyByZXNldCgpOiB2b2lkIHtcbiAgICB0aGlzLnN0YXRlTWFjaGluZS5yZXNldCgpO1xuICAgIHRoaXMubWVzc2FnZXMgPSBbXTtcbiAgfVxufSAiXSwibmFtZXMiOlsiU3RhdGVNYWNoaW5lIiwiQ2hhdFNlcnZpY2UiLCJsb2dUb0FuYWx5dGljcyIsInN0YXRlIiwiYW5hbHlzaXMiLCJvdXRjb21lIiwiY3VycmVudFN0YXRlIiwiY2FsbF90aW1lIiwiRGF0ZSIsIm5vdyIsIm1lc3NhZ2VzIiwidGltZXN0YW1wIiwiY2FsbF9zdGF0dXMiLCJjYWxsX3RyYW5zY3JpcHQiLCJtYXAiLCJtIiwicm9sZSIsImNvbnRlbnQiLCJqb2luIiwibG9jYXRpb24iLCJuYW1lIiwicGhvbmVfbnVtYmVyIiwicGhvbmVOdW1iZXIiLCJib29raW5nX3JlZiIsImJvb2tpbmdSZWYiLCJkYXRlX3RpbWUiLCJkYXRlVGltZSIsInBheF9zaXplIiwicGF4U2l6ZSIsImFjdGlvbl90eXBlIiwiYWN0aW9uVHlwZSIsIm1ldGFkYXRhIiwicXVlc3Rpb25zX2Fza2VkIiwiZmlsdGVyIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcnJvciIsImNvbnNvbGUiLCJwcm9jZXNzSW5wdXQiLCJpbnB1dCIsInB1c2giLCJyZXNwb25zZSIsInN0YXRlTWFjaGluZSIsImdldEN1cnJlbnRTdGF0ZSIsImdldFN0YXRlIiwiZ2V0TWVzc2FnZXMiLCJyZXNldCIsImNvbnN0cnVjdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/services/chatService.ts\n"));

/***/ })

});